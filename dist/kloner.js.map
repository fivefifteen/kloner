{"version":3,"file":"kloner.js","sources":["../src/kloner.js"],"sourcesContent":["/*!\n  Kloner v0.1.0 (https://kloner.js.org)\n  by Five Fifteen (https://fivefifteen.com)\n*/\n\nconst kloner = (containerSelector, childSelector, options) => {\n  if (childSelector && childSelector.constructor === Object) {\n    options = childSelector\n    childSelector = null\n  }\n\n  if (containerSelector && containerSelector.constructor === Object) {\n    options = containerSelector\n    containerSelector = null\n  }\n\n  options = Object.assign({}, kloner.defaultOptions, options || {})\n\n  if (containerSelector) {\n    options.containerSelector = containerSelector\n  }\n\n  if (childSelector) {\n    options.childSelector = childSelector\n  }\n\n  const containers = kloner.getInstances(options.containerSelector)\n\n  if (containers && containers.length) {\n    for (let i = 0; i < containers.length; i++) {\n      (function (container) {\n        const funcs = {\n          add: function (atIndex, options) {\n            return kloner.add(container, atIndex, options)\n          },\n          remove: function (atIndex, options) {\n            return kloner.remove(container, atIndex, options)\n          }\n        }\n\n        const opts = Object.assign({}, options, kloner.getAttributeOptions(container), funcs)\n        let data = {} // eslint-disable-line prefer-const\n\n        if (opts.template) {\n          const templateContainer = document.createElement(null)\n\n          templateContainer.innerHTML = opts.template\n\n          const templateElement = templateContainer.firstElementChild\n          const template = templateElement.cloneNode(true)\n\n          data.template = template\n          data.templateIndex = 0\n\n          templateContainer.remove()\n        } else {\n          const templateElement = container.querySelector(opts.childSelector)\n\n          if (!templateElement) {\n            console.warn('[kloner] No template found:', opts.childSelector)\n            return\n          }\n\n          const template = templateElement.cloneNode(true)\n\n          data.template = template\n          data.templateIndex = Array.prototype.indexOf.call(container.children, templateElement)\n\n          if (templateElement.matches('[data-kloner-template]')) {\n            templateElement.remove()\n          }\n        }\n\n        const existingChildren = container.querySelectorAll(opts.childSelector)\n        const count = existingChildren.length\n\n        for (let j = 0; j < count; j++) {\n          kloner.replaceParameters(existingChildren[j], Object.assign({}, opts.parameters || {}, {\n            index: j,\n            number: (j + 1)\n          }))\n        }\n\n        data.count = count\n        data.constCount = count\n        container.kloner = opts\n        container.klonerData = data\n\n        kloner.initializeTriggers(container)\n\n        if (opts.start) {\n          let extraChildren = opts.start\n\n          if (!Array.isArray(extraChildren) && Number.isInteger(parseInt(extraChildren))) {\n            extraChildren = Array((parseInt(extraChildren) - container.klonerData.count) || 0).fill({})\n          }\n\n          if (Array.isArray(extraChildren)) {\n            extraChildren.forEach(childParameters => {\n              opts.add(null, { parameters: childParameters })\n            })\n          }\n        }\n\n        if (opts.min && container.klonerData.count < parseInt(opts.min)) {\n          for (let k = 0; k < (parseInt(opts.min) - container.klonerData.count); k++) {\n            opts.add()\n          }\n        }\n\n        if (opts.max && container.klonerData.count > parseInt(opts.max)) {\n          for (let l = 0; l < (container.klonerData.count - parseInt(opts.max)); l++) {\n            opts.remove()\n          }\n        }\n      })(containers[i])\n    }\n  }\n\n  if (containers.length) {\n    if (containers.length === 1) {\n      return containers[0]\n    }\n\n    return containers\n  }\n\n  return false\n}\n\nkloner.add = (containerSelector, atIndex, options) => {\n  if (atIndex && atIndex.constructor === Object) {\n    options = atIndex\n    atIndex = null\n  }\n\n  if (containerSelector && containerSelector.constructor === Object) {\n    options = containerSelector\n    containerSelector = null\n  }\n\n  if (!containerSelector) containerSelector = kloner.defaultOptions.containerSelector\n\n  const containers = kloner.getInstances(containerSelector, true)\n\n  if (containers && containers.length) {\n    for (let i = 0; i < containers.length; i++) {\n      (function (container) {\n        const opts = Object.assign({}, container.kloner, kloner.getAttributeOptions(container), options)\n        const count = container.klonerData.count\n        const elementCount = opts.updateChildren ? count : container.klonerData.constCount\n\n        if (opts.max && count >= parseInt(opts.max)) {\n          return\n        }\n\n        const elements = container.querySelectorAll(opts.childSelector)\n        const element = container.klonerData.template.cloneNode(true)\n\n        kloner.replaceParameters(element, Object.assign({}, opts.parameters || {}, {\n          index: elementCount,\n          number: (elementCount + 1)\n        }))\n\n        if (opts.beforeAdd && opts.beforeAdd(container, element, opts) === false) {\n          return false\n        }\n\n        const elementIndex = atIndex ?? elements.length ?? container.klonerData.templateIndex\n\n        if (elementIndex) {\n          if (elementIndex >= container.children.length) {\n            container.append(element)\n          } else {\n            container.insertBefore(\n              element,\n              container.children[elementIndex]\n            )\n          }\n        } else {\n          container.prepend(element)\n        }\n\n        container.klonerData.count++\n        container.klonerData.constCount++\n\n        if (opts.updateChildren) {\n          kloner.updateChildren(container)\n        }\n\n        kloner.initializeTriggers(container)\n\n        if (opts.afterAdd) {\n          opts.afterAdd(container, element, opts)\n        }\n      })(containers[i])\n    }\n  }\n}\n\nkloner.defaultOptions = {\n  afterAdd: null,\n  afterChildUpdate: null,\n  afterRemove: null,\n  beforeAdd: null,\n  beforeChildUpdate: null,\n  beforeRemove: null,\n  childSelector: '[data-kloner-template], :scope > *',\n  containerSelector: '[data-kloner], .kloner',\n  max: null,\n  min: 0,\n  parameters: null,\n  start: 0,\n  template: null,\n  updateChildren: false\n}\n\nkloner.getAttributeOptions = (containerSelector) => {\n  if (!containerSelector) containerSelector = kloner.defaultOptions.containerSelector\n\n  const container = kloner.getInstances(containerSelector, false, true)\n\n  if (container) {\n    const data = Object.assign({}, container.dataset)\n    const regexp = /kloner([A-Z].*)/\n\n    return Object.keys(data)\n      .filter(key => regexp.test(key))\n      .reduce((obj, key) => {\n        const match = key.match(regexp)\n        const newKey = match[1][0].toLowerCase() + match[1].slice(1)\n        obj[newKey] = data[key]\n        return obj\n      }, {})\n  }\n\n  return {}\n}\n\nkloner.getInstances = (elements, verify, single) => {\n  if (typeof elements === 'string') {\n    elements = document.querySelectorAll(elements)\n  } else if (elements instanceof HTMLElement) {\n    elements = [elements]\n  }\n\n  if (verify) {\n    let verifiedElements = [] // eslint-disable-line prefer-const\n\n    for (let i = 0; i < elements.length; i++) {\n      (function (container) {\n        if (!container.kloner) {\n          console.warn('Element doesn\\'t appear to be a kloner instance:', container)\n          return\n        }\n\n        verifiedElements.push(container)\n      })(elements[i])\n    }\n\n    return verifiedElements\n  }\n\n  if (elements.length && single) {\n    return elements[0]\n  }\n\n  return elements\n}\n\nkloner.initializeTriggers = (containerSelector) => {\n  if (!containerSelector) containerSelector = kloner.defaultOptions.containerSelector\n\n  const containers = kloner.getInstances(containerSelector, true)\n\n  if (containers && containers.length) {\n    for (let i = 0; i < containers.length; i++) {\n      (function (container) {\n        let addElements = container.querySelectorAll('[data-kloner-add]')\n\n        if (container.id) {\n          addElements = Array.prototype.slice.call(addElements).concat(\n            Array.prototype.slice.call(\n              document.querySelectorAll('[data-kloner-add=\"' + container.id + '\"]')\n            )\n          )\n        }\n\n        if (addElements.length) {\n          for (let j = 0; j < addElements.length; j++) {\n            if (!addElements[j].klonerData || !addElements[j].klonerData.trigger) {\n              addElements[j].addEventListener('click', function (e) {\n                let atIndex = null\n\n                if (!addElements[j].dataset.klonerAdd.length) {\n                  const child = addElements[j].closest(container.kloner.childSelector)\n\n                  if (child) {\n                    atIndex = Array.prototype.indexOf.call(container.children, child)\n                  }\n                }\n\n                container.kloner.add(atIndex, kloner.getAttributeOptions(addElements[j]))\n              })\n\n              if (!addElements[j].klonerData) {\n                addElements[j].klonerData = {}\n              }\n\n              addElements[j].klonerData.trigger = true\n            }\n          }\n        }\n\n        let removeElements = container.querySelectorAll('[data-kloner-remove]')\n\n        if (container.id) {\n          removeElements = Array.prototype.slice.call(removeElements).concat(\n            Array.prototype.slice.call(\n              document.querySelectorAll('[data-kloner-remove=\"' + container.id + '\"]')\n            )\n          )\n        }\n\n        if (removeElements.length) {\n          for (let k = 0; k < removeElements.length; k++) {\n            if (!removeElements[k].klonerData || !removeElements[k].klonerData.trigger) {\n              removeElements[k].addEventListener('click', function (e) {\n                let atIndex = null\n\n                if (!removeElements[k].dataset.klonerRemove.length) {\n                  const child = removeElements[k].closest(container.kloner.childSelector)\n\n                  if (child) {\n                    atIndex = Array.prototype.indexOf.call(container.children, child)\n                  }\n                }\n\n                container.kloner.remove(atIndex, kloner.getAttributeOptions(removeElements[k]))\n              })\n\n              if (!removeElements[k].klonerData) {\n                removeElements[k].klonerData = {}\n              }\n\n              removeElements[k].klonerData.trigger = true\n            }\n          }\n        }\n\n        let countElements = container.querySelectorAll('[data-kloner-count]')\n\n        if (container.id) {\n          countElements = Array.prototype.slice.call(countElements).concat(\n            Array.prototype.slice.call(\n              document.querySelectorAll('[data-kloner-count=\"' + container.id + '\"]')\n            )\n          )\n        }\n\n        if (countElements.length) {\n          for (let l = 0; l < countElements.length; l++) {\n            countElements[l].textContent = container.klonerData.count\n          }\n        }\n      })(containers[i])\n    }\n  }\n}\n\nkloner.remove = (containerSelector, atIndex, options) => {\n  if (atIndex && atIndex.constructor === Object) {\n    options = atIndex\n    atIndex = null\n  }\n\n  if (containerSelector && containerSelector.constructor === Object) {\n    options = containerSelector\n    containerSelector = null\n  }\n\n  if (!containerSelector) containerSelector = kloner.defaultOptions.containerSelector\n\n  const containers = kloner.getInstances(containerSelector, true)\n\n  if (containers && containers.length) {\n    for (let i = 0; i < containers.length; i++) {\n      (function (container) {\n        const opts = Object.assign({}, container.kloner, kloner.getAttributeOptions(container), options)\n        const count = container.klonerData.count\n\n        if (count <= 0 || (opts.min && count <= parseInt(opts.min))) {\n          return\n        }\n\n        const elements = container.querySelectorAll(opts.childSelector)\n        const indexLimit = (elements.length - 1)\n        let elementIndex = atIndex ?? indexLimit\n\n        if (elementIndex > indexLimit) {\n          elementIndex = indexLimit\n        }\n\n        const element = elements[elementIndex]\n\n        if (opts.beforeRemove && opts.beforeRemove(container, element, opts) === false) {\n          return false\n        }\n\n        element.remove()\n\n        container.klonerData.count--\n\n        if (opts.updateChildren) {\n          kloner.updateChildren(container)\n        }\n\n        kloner.initializeTriggers(container)\n\n        if (opts.afterRemove) {\n          opts.afterRemove(container, element, opts)\n        }\n      })(containers[i])\n    }\n  }\n}\n\nkloner.replaceParameters = (element, parameters) => {\n  if (!element.klonerData) {\n    element.klonerData = {}\n  }\n\n  if (!element.klonerData.initialContent) {\n    element.klonerData.initialContent = element.innerHTML\n  }\n\n  element.klonerData.parameters = Object.assign({}, element.klonerData.parameters, parameters || {})\n\n  element.innerHTML = element.klonerData.initialContent\n    .replaceAll(/\\{kloner-(\\w+)\\}/g, (match, key) => element.klonerData.parameters[key] ?? match)\n}\n\nkloner.updateChildren = (containerSelector) => {\n  if (!containerSelector) containerSelector = kloner.defaultOptions.containerSelector\n\n  const containers = kloner.getInstances(containerSelector, true)\n\n  if (containers && containers.length) {\n    for (let i = 0; i < containers.length; i++) {\n      (function (container) {\n        const opts = container.kloner\n        const elements = container.querySelectorAll(opts.childSelector)\n\n        if (elements) {\n          for (let j = 0; j < elements.length; j++) {\n            const element = elements[j]\n\n            if (opts.beforeChildUpdate && opts.beforeChildUpdate(container, element, opts) === false) {\n              continue\n            }\n\n            kloner.replaceParameters(element, {\n              index: j,\n              number: (j + 1)\n            })\n\n            if (opts.afterChildUpdate) {\n              opts.afterChildUpdate(container, element, opts)\n            }\n          }\n        }\n      })(containers[i])\n    }\n  }\n}\n\nexport default kloner\n"],"names":["kloner","containerSelector","childSelector","options","constructor","Object","assign","defaultOptions","containers","getInstances","length","i","container","funcs","add","atIndex","remove","opts","getAttributeOptions","data","template","templateContainer","document","createElement","innerHTML","templateElement","firstElementChild","cloneNode","templateIndex","querySelector","console","warn","Array","prototype","indexOf","call","children","matches","existingChildren","querySelectorAll","count","j","replaceParameters","parameters","index","number","constCount","klonerData","initializeTriggers","start","extraChildren","isArray","Number","isInteger","parseInt","fill","forEach","childParameters","min","k","max","l","_ref","elementCount","updateChildren","elements","element","beforeAdd","elementIndex","append","insertBefore","prepend","afterAdd","afterChildUpdate","afterRemove","beforeChildUpdate","beforeRemove","dataset","regexp","keys","filter","key","test","reduce","obj","match","newKey","toLowerCase","slice","verify","single","HTMLElement","verifiedElements","push","addElements","id","concat","_loop","trigger","addEventListener","e","klonerAdd","child","closest","removeElements","_loop2","klonerRemove","countElements","textContent","indexLimit","initialContent","replaceAll","_element$klonerData$p"],"mappings":"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"}